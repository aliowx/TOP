version: '3.7'

services:
  backend:
    image: backend-img
    container_name: backend
    build:
      context: .
      dockerfile: backend.dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - "8091:80"
    volumes:
      - ./app:/app/
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - db
    
  db:
    image: dr2.parswitch.com/devops/postgres:14
    container_name: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
  
  queue:
    image: dr2.parswitch.com/devops/rabbitmq:3
    container_name: rabbitmq
    ports:
      - "5672:5672"


  celery-worker:
    image: celery-img
    container_name: celery
    restart: always
    depends_on:
      - backend
      - queue
    env_file:
      - .env
    build:
      context: .
      dockerfile: celeryworker.dockerfile
#    command: celery -A celery.main.celery_app worker --loglevel=INFO

  rocketry-worker:
    image: rocketry-img
    container_name: rocketry
    build:
      context: .
      dockerfile: rocketryscheduler.dockerfile
    volumes:
      - ./app:/app/
    restart: always
    depends_on:
      - backend
    env_file:
      - .env

volumes:
  postgres-data:
